apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'eclipse'

def versionObj = new Version(major: 0, minor: 1, revision: 0)
version = "$versionObj"

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = project.name
    manifest {
        attributes 'Implementation-Version': version
        attributes 'Main-Class': "au.com.spotless.justinfreeston.musicplayerserver.MusicPlayerServer"
    }
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	baseName = project.name + '-fat'
    manifest {
        attributes 'Implementation-Version': version
        attributes 'Main-Class': "au.com.spotless.justinfreeston.musicplayerserver.MusicPlayerServer"
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

repositories {
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    //testImplementation 'junit:junit:4.12'
    
    //api 'com.google.guava:guava:24.0-jre'
    compile files('lib/TinySound-1.1.1.jar')
    compile 'org.nanohttpd:nanohttpd:2.3.1'
	compile 'org.json:json:20180130'    
}

class Version {
    int major, minor, revision

    String getBuild() {
        System.getenv("BUILD_NUMBER") ?: System.getProperty("BUILD_NUMBER") ?: "DEV"
    }

    String toString() {
        "${major}.${minor}.${revision}_$build"
    }
}

assemble.dependsOn fatJar
